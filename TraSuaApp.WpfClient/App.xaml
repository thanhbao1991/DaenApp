
<Application
    x:Class="TraSuaApp.WpfClient.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conveter="clr-namespace:TraSuaApp.WpfClient.Converters"
    xmlns:ctrl="clr-namespace:TraSuaApp.WpfClient.Controls"
    xmlns:fa="clr-namespace:FontAwesome.Sharp;assembly=FontAwesome.Sharp"
    xmlns:local="clr-namespace:TraSuaApp.WpfClient.Helpers"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    Exit="Application_Exit">
    <Application.Resources>
        <!--  Converter  -->
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <conveter:RowStyleMultiConverter x:Key="RowStyleMultiConverter" />
        <conveter:NullOrEmptyOrDefaultToVisibilityConverter x:Key="NullOrEmptyOrDefaultToVisibilityConverter" />
        <conveter:SkipFirstConverter x:Key="SkipFirstConverter" />
        <conveter:GreaterThanZeroConverter x:Key="GreaterThanZeroConverter" />
        <conveter:NotNullToBoolConverter x:Key="NotNullToBoolConverter" />
        <conveter:BoolToHiddenConverter x:Key="BoolToHiddenConverter" />
        <conveter:InverseBoolConverter x:Key="InverseBoolConverter" />
        <conveter:SoDienThoaiConverter x:Key="SoDienThoaiConverter" />
        <conveter:BoolToVisibilityConverterWithInvert x:Key="BoolToVisibilityConverterWithInvert" />
        <conveter:BoolToRowDetailsConverter x:Key="BoolToRowDetailsConverter" />


        <sys:Double x:Key="FontSizeSmall">12</sys:Double>
        <sys:Double x:Key="FontSizeNormal">14</sys:Double>
        <sys:Double x:Key="FontSizeLarge">18</sys:Double>
        <sys:Double x:Key="FontSizeBig">22</sys:Double>
        <sys:Double x:Key="FontSizeXXX">80</sys:Double>

        <SolidColorBrush x:Key="PrimaryBrush" Color="#0d6efd" />
        <SolidColorBrush x:Key="SuccessBrush" Color="#198754" />
        <SolidColorBrush x:Key="WarningBrush" Color="#ffc107" />
        <SolidColorBrush x:Key="DangerBrush" Color="#dc3545" />
        <SolidColorBrush x:Key="SecondaryBrush" Color="#6c757d" />
        <SolidColorBrush x:Key="InfoBrush" Color="#0dcaf0" />
        <SolidColorBrush x:Key="LightBrush" Color="#f8f9fa" />
        <SolidColorBrush x:Key="DarkBrush" Color="#212529" />

        <!--  Foreground tương ứng  -->
        <SolidColorBrush x:Key="PrimaryForeground" Color="White" />
        <SolidColorBrush x:Key="SuccessForeground" Color="White" />
        <SolidColorBrush x:Key="WarningForeground" Color="Black" />
        <SolidColorBrush x:Key="DangerForeground" Color="White" />
        <SolidColorBrush x:Key="SecondaryForeground" Color="White" />
        <SolidColorBrush x:Key="InfoForeground" Color="Black" />
        <SolidColorBrush x:Key="LightForeground" Color="Black" />
        <SolidColorBrush x:Key="DarkForeground" Color="White" />



        <Style TargetType="TabItem">
            <Setter Property="Padding" Value="12,6" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border
                            x:Name="Bd"
                            Margin="4,0,4,0"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="8 8 0 0">
                            <ContentPresenter
                                x:Name="ContentSite"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--  Hover  -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#EEE" />
                            </Trigger>

                            <!--  Selected  -->
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#4CAF50" />
                                <Setter TargetName="Bd" Property="BorderBrush" Value="#4CAF50" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="FontWeight" Value="Regular" />
                            </Trigger>

                            <!--  Disabled  -->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#DEDEDE" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="CloseTitleBarButtonStyle"
            BasedOn="{StaticResource TitleBarButtonStyle}"
            TargetType="Button">

            <Style.Triggers>

                <Trigger Property="IsMouseOver" Value="True">

                    <Setter Property="Background" Value="#E81123" />

                    <Setter Property="Foreground" Value="White" />

                </Trigger>

            </Style.Triggers>

        </Style>
        <Style x:Key="SearchTextBoxStyle" TargetType="TextBox">
            <Setter Property="Padding" Value="10,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style x:Key="SearchHintTextStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="12,0,0,0" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="32" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Margin" Value="0,5,5,0" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Foreground" Value="#888" />
            <Setter Property="Content" Value="✖" />
        </Style>
        <Style x:Key="TitleTextStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="10,5" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="#333" />
        </Style>
        <Style x:Key="BasePopupWindowStyle" TargetType="Window">
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="Background" Value="#99000000" />
            <Setter Property="Background" Value="#99000000" />
            <Setter Property="ResizeMode" Value="NoResize" />
            <Setter Property="SizeToContent" Value="Manual" />
            <Setter Property="WindowStyle" Value="None" />
        </Style>
        <Style
            x:Key="PopupWindowWithBorderStyle"
            BasedOn="{StaticResource BasePopupWindowStyle}"
            TargetType="Window">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Window">
                        <Grid Background="#99000000">
                            <Border
                                Width="800"
                                Height="600"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="WhiteSmoke"
                                BorderBrush="#DDD"
                                BorderThickness="1"
                                CornerRadius="12">
                                <ContentPresenter />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="HideIfEmptyTextBlockStyle" TargetType="TextBlock">
            <Setter Property="Visibility" Value="Visible" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--  Style cho Window chỉnh sửa  -->
        <Style x:Key="EditWindowStyle" TargetType="Window">
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}" />
            <Setter Property="Background" Value="#99000000" />
            <Setter Property="ResizeMode" Value="NoResize" />
            <Setter Property="SizeToContent" Value="Manual" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="MinWidth" Value="800" />
            <Setter Property="MinHeight" Value="600" />
        </Style>

        <!--  Border chính bao khung form  -->
        <Style x:Key="EditFormBorderStyle" TargetType="Border">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="#DDD" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="12" />
        </Style>

        <!--  Header Panel chứa tiêu đề và nút đóng  -->
        <Style x:Key="EditHeaderPanelStyle" TargetType="DockPanel">
            <Setter Property="LastChildFill" Value="True" />
            <Setter Property="Margin" Value="0,0,0,10" />
        </Style>

        <!--  Tiêu đề  -->
        <Style x:Key="EditTitleTextStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="10,5" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="Foreground" Value="#333" />
        </Style>


        <!--  Nút Lưu  -->
        <Style x:Key="SaveButtonStyle" TargetType="Button">
            <Setter Property="MinWidth" Value="100" />
            <Setter Property="Height" Value="36" />
            <Setter Property="Background" Value="#4CAF50" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderBrush" Value="#388E3C" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#66BB6A" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--  Nút Xóa  -->
        <!--
        <Style x:Key="DeleteButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="60" />
            <Setter Property="Height" Value="26" />
            <Setter Property="Background" Value="#e57373" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderBrush" Value="#d32f2f" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ef5350" />
                </Trigger>
            </Style.Triggers>
        </Style>-->

        <!--  TextBlock lỗi  -->
        <Style x:Key="ErrorTextBlock" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Red" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="Margin" Value="0,0,0,5" />
        </Style>



        <Style x:Key="ClearXButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="20" />
            <Setter Property="Height" Value="20" />
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="FontWeight" Value="Black" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Visibility" Value="Collapsed" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock
                            Padding="8"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{TemplateBinding Foreground}"
                            Text="❌" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Gray" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="DarkGray" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border
                            Padding="4"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <StackPanel VerticalAlignment="Center" Orientation="Horizontal">
                                <Grid>
                                    <fa:IconBlock
                                        x:Name="CheckedIcon"
                                        Foreground="{TemplateBinding Foreground}"
                                        Icon="Check"
                                        Visibility="Collapsed" />
                                    <fa:IconBlock
                                        Foreground="{TemplateBinding Foreground}"
                                        Icon="Check"
                                        Visibility="Hidden" />
                                </Grid>
                                <ContentPresenter
                                    Margin="5,0,0,0"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckedIcon" Property="Visibility" Value="Visible" />
                                <Setter Property="FontWeight" Value="Medium" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
        <!--  Base input style  -->
        <Style x:Key="BaseInputStyle" TargetType="Control">
            <Setter Property="Height" Value="32" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="Padding" Value="10,0,10,0" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>
        <Style BasedOn="{StaticResource BaseInputStyle}" TargetType="{x:Type ctrl:MoneyTextBox}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Background" Value="#FAFAFA" />
            <Setter Property="BorderBrush" Value="#CCC" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
        <Style BasedOn="{StaticResource BaseInputStyle}" TargetType="{x:Type ctrl:NumericTextBox}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Background" Value="#FAFAFA" />
            <Setter Property="BorderBrush" Value="#CCC" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
        <Style BasedOn="{StaticResource BaseInputStyle}" TargetType="{x:Type ctrl:PhoneNumberTextBox}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Background" Value="#FAFAFA" />
            <Setter Property="BorderBrush" Value="#CCC" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>

        <!--  TextBox / ComboBox / PasswordBox dùng chung BaseInputStyle  -->
        <Style BasedOn="{StaticResource BaseInputStyle}" TargetType="TextBox">
            <Setter Property="Background" Value="#FAFAFA" />
            <Setter Property="BorderBrush" Value="#CCC" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
        <Style BasedOn="{StaticResource BaseInputStyle}" TargetType="ComboBox">
            <Setter Property="Background" Value="#FAFAFA" />
            <Setter Property="BorderBrush" Value="#CCC" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
        <Style BasedOn="{StaticResource BaseInputStyle}" TargetType="PasswordBox">
            <Setter Property="Background" Value="#FAFAFA" />
            <Setter Property="BorderBrush" Value="#CCC" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>

        <!--  DatePicker riêng vì có padding khác  -->
        <Style TargetType="DatePicker">
            <Setter Property="Height" Value="32" />
            <Setter Property="Padding" Value="5" />
        </Style>

        <!--  CheckBox chung  -->
        <Style TargetType="CheckBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

        <!--  Style gốc (căn giữa mặc định)  -->
        <Style x:Key="DataGridCheckBoxElementBaseStyle" TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Height" Value="32" />
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="Focusable" Value="False" />

        </Style>

        <!--  Style căn giữa (kế thừa base)  -->
        <Style
            x:Key="DataGridCheckBoxElementStyle"
            BasedOn="{StaticResource DataGridCheckBoxElementBaseStyle}"
            TargetType="CheckBox" />

        <!--  Style căn trái (kế thừa base)  -->
        <Style
            x:Key="DataGridCheckBoxElementStyleLeft"
            BasedOn="{StaticResource DataGridCheckBoxElementBaseStyle}"
            TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Margin" Value="16,0,0,0" />
        </Style>
        <!--  Base Button style  -->

        <Style
            x:Key="BaseButtonStyle"
            BasedOn="{StaticResource BaseInputStyle}"
            TargetType="Button">
            <Setter Property="MinWidth" Value="80" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#CCC" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Padding="8,4,8,4"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!--  Trigger khi IsEnabled = False  -->
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="BaseButtonStyle2"
            BasedOn="{StaticResource BaseInputStyle}"
            TargetType="Button">
            <Setter Property="MinWidth" Value="80" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#CCC" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Opacity" Value="1" />
            <Setter Property="Padding" Value="8,4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6">
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <fa:IconBlock
                                    Width="16"
                                    Height="16"
                                    Margin="0,0,5,0"
                                    Foreground="{TemplateBinding Foreground}"
                                    Icon="{TemplateBinding Tag}" />
                                <ContentPresenter VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--  Trigger khi IsEnabled = False  -->
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style
            x:Key="AddButtonStyle"
            BasedOn="{StaticResource BaseButtonStyle}"
            TargetType="Button">
            <Setter Property="Background" Value="#4CAF50" />
        </Style>
        <Style
            x:Key="EditButtonStyle"
            BasedOn="{StaticResource BaseButtonStyle}"
            TargetType="Button">
            <Setter Property="Background" Value="#2196F3" />
        </Style>
        <Style
            x:Key="DeleteButtonStyle"
            BasedOn="{StaticResource BaseButtonStyle}"
            TargetType="Button">
            <Setter Property="Background" Value="#F44336" />
        </Style>
        <Style
            x:Key="ReloadButtonStyle"
            BasedOn="{StaticResource BaseButtonStyle}"
            TargetType="Button">
            <Setter Property="Background" Value="#FF9800" />
        </Style>

        <!--  Base style cho các nút nhỏ  -->
        <Style
            x:Key="BaseSmallButtonStyle"
            BasedOn="{StaticResource BaseButtonStyle}"
            TargetType="Button">
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
        </Style>
        <Style
            x:Key="ThemButtonStyle"
            BasedOn="{StaticResource BaseSmallButtonStyle}"
            TargetType="Button">
            <Setter Property="Foreground" Value="#4CAF50" />
        </Style>
        <Style
            x:Key="SuaButtonStyle"
            BasedOn="{StaticResource BaseSmallButtonStyle}"
            TargetType="Button">
            <Setter Property="Foreground" Value="#2196F3" />
        </Style>
        <Style
            x:Key="TaiLaiButtonStyle"
            BasedOn="{StaticResource BaseSmallButtonStyle}"
            TargetType="Button">
            <Setter Property="Foreground" Value="#FF9800" />
        </Style>

        <Style
            x:Key="XoaButtonStyle"
            BasedOn="{StaticResource BaseSmallButtonStyle}"
            TargetType="Button">
            <Setter Property="Foreground" Value="#F44336" />
        </Style>

        <!--  DataGrid styles  -->
        <Style x:Key="MiddleCellStyle" TargetType="DataGridCell">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="16,16,16,16" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#FFCCE5FF" />
                    <Setter Property="Foreground" Value="Black" />
                    <Setter Property="BorderBrush" Value="#FFCCE5FF" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CenterTextCellStyle" TargetType="TextBlock">
            <Setter Property="Width" Value="Auto" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Padding" Value="16,8,16,8" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="LeftTextCellStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Padding" Value="16,8,16,8" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="RightTextCellStyle" TargetType="TextBlock">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="16,8,16,8" />
        </Style>
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Padding" Value="16,8,16,8" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="FontWeight" Value="SemiBold" />
        </Style>

        <Style TargetType="DataGrid">
            <Setter Property="AlternatingRowBackground" Value="#f0f0f0" />
            <Setter Property="RowBackground" Value="#f6f6f6" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="BorderBrush" Value="#DDD" />
            <Setter Property="Background" Value="#f6f6f6" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CanUserSortColumns" Value="False" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="ColumnHeaderHeight" Value="36" />
            <Setter Property="GridLinesVisibility" Value="Horizontal" />
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="RowHeight" Value="32" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="SelectionUnit" Value="FullRow" />
            <Setter Property="CellStyle" Value="{StaticResource MiddleCellStyle}" />
        </Style>
    </Application.Resources>
</Application>


