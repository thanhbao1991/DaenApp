@page
@model TraSuaAppWeb.Pages.ChiTietHoaDonThanhToanTabModel
@{
    ViewData["Title"] = "Chi Tiết Thanh Toán";
}

<div class="container-fluid mt-3">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="mb-0">
            <i class="fa fa-hand-holding-usd text-success"></i>
            Chi Tiết Thanh Toán
        </h4>
        <button class="btn btn-outline-secondary btn-sm" onclick="location.reload()">
            <i class="fa fa-sync"></i> Tải lại
        </button>
    </div>

    <!-- 🟟 Thanh tìm kiếm -->
    <div class="input-group mb-3">
        <span class="input-group-text"><i class="fa fa-search"></i></span>
        <input type="text"
               id="searchBox"
               class="form-control"
               placeholder="Tìm khách, ghi chú, phương thức..."
               onkeyup="filterTable(this.value)">
    </div>

    <!-- 🟟 Bộ nút lọc nhanh -->
    <div class="mb-3">
        <button class="btn btn-success btn-sm me-1" onclick="quickFilter('tiền mặt trong ngày')">
            🟟 Tiền mặt hôm nay
        </button>
        <button class="btn btn-warning btn-sm me-1" onclick="quickFilter('chuyển khoản trong ngày')">
            🟟 Chuyển khoản hôm nay
        </button>
        <button class="btn btn-danger btn-sm me-1" onclick="quickFilter('qua ngày')">
            🟟 Trả nợ hôm nay
        </button>
        <button class="btn btn-primary btn-sm me-1" onclick="quickFilter('shipper tiền mặt trong ngày')">
            🟟 Tiền mặt Shipper
        </button>
        <button class="btn btn-info btn-sm" onclick="quickFilter('shipper tiền mặt qua ngày')">
            🟟 Trả nợ Shipper
        </button>
    </div>

    <!-- 🟟 Bảng danh sách -->
    <div class="table-responsive">
        <table id="payTable" class="table table-striped table-bordered align-middle">
            <thead class="table-light">
                <tr>
                    <th>Tên</th>
                    <th>Ngày</th>
                    <th>Giờ</th>
                    <th>Phân loại</th>
                    <th>Phương thức</th>
                    <th class="text-end">Số tiền</th>
                    <th>Ghi chú</th>
                    <th class="text-center">Xoá</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Items)
                {
                    var bgClass = item.TenPhuongThucThanhToan?.Contains("Chuyển khoản") == true ? "table-warning" : "";
                    <tr class="@bgClass">
                        <td>@item.Ten</td>
                        <td>@item.Ngay.ToString("dd/MM")</td>
                        <td>@item.NgayGio.ToString("HH:mm")</td>
                        <td>@item.LoaiThanhToan</td>
                        <td>@item.TenPhuongThucThanhToan</td>
                        <td class="text-end fw-bold">@item.SoTien.ToString("N0")</td>
                        <td>@item.GhiChu</td>
                        <td class="text-center">
                            <button class="btn btn-sm btn-danger" title="Xoá" onclick="deletePay('@item.Id')">
                                <i class="fa fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Tổng -->
    <div class="mt-3 text-end">
        <strong>Tổng thanh toán:</strong>
        <span class="fw-bold text-danger" id="totalAmount">@Model.TotalThanhToan.ToString("N0") đ</span>
    </div>
</div>

@section Scripts {
    <script>
        function normalizeText(str) {
            return str
                .toLowerCase()
                .normalize('NFD')
                .replace(/[\u0300-\u036f]/g, '')
                .replace(/đ/g, 'd')
                .replace(/[^a-z0-9]/g, '');
        }

        // 🟟 Lọc bảng theo từ khoá + cập nhật tổng
        function filterTable(keyword) {
            const keyNorm = normalizeText(keyword);
            let total = 0;

            document.querySelectorAll("#payTable tbody tr").forEach(row => {
                const text = normalizeText(row.innerText);
                const visible = text.includes(keyNorm);
                row.style.display = visible ? "" : "none";
                if (visible) {
                    const td = row.querySelectorAll("td")[5];
                    if (td) total += parseFloat(td.innerText.replace(/[^\d]/g, "")) || 0;
                }
            });

            document.querySelector("#totalAmount").innerText = total.toLocaleString('vi-VN') + " đ";
        }

        // 🟟 Gợi ý lọc nhanh
        function quickFilter(tag) {
            document.getElementById('searchBox').value = tag;
            filterTable(tag);
        }

        // ❌ Xoá thanh toán
        async function deletePay(id) {
            if (!confirm("Xác nhận xoá bản ghi này?")) return;

            const btns = document.querySelectorAll('button[onclick*="' + id + '"]');
            btns.forEach(b => b.disabled = true);

            try {
                const res = await fetch('/ChiTietHoaDonThanhToanTab?handler=Delete', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id })
                });
                const result = await res.json();
                alert(result.message);
                if (result.success) location.reload();
                else btns.forEach(b => b.disabled = false);
            } catch (e) {
                alert("Lỗi: " + e);
                btns.forEach(b => b.disabled = false);
            }
        }
    </script>
}